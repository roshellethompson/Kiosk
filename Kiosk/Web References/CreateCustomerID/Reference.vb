'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18444
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
'
Namespace CreateCustomerID
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="CreateCustomerIDSoap", [Namespace]:="http://fldevez/"),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(RelatedEnd)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(StructuralObject)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(EntityKeyMember()))>  _
    Partial Public Class CreateCustomerID
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private CreateCustomerXMLOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateCustomerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddCompanyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateCompanyCardNumberOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CompareCustomerDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CompareCustomerDataXMLOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ATMLoginOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CustomerACKOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.Kiosk.My.MySettings.Default.Kiosk_CreateCustomerID_CreateCustomerID
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event CreateCustomerXMLCompleted As CreateCustomerXMLCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateCustomerCompleted As CreateCustomerCompletedEventHandler
        
        '''<remarks/>
        Public Event AddCompanyCompleted As AddCompanyCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateCompanyCardNumberCompleted As UpdateCompanyCardNumberCompletedEventHandler
        
        '''<remarks/>
        Public Event CompareCustomerDataCompleted As CompareCustomerDataCompletedEventHandler
        
        '''<remarks/>
        Public Event CompareCustomerDataXMLCompleted As CompareCustomerDataXMLCompletedEventHandler
        
        '''<remarks/>
        Public Event ATMLoginCompleted As ATMLoginCompletedEventHandler
        
        '''<remarks/>
        Public Event CustomerACKCompleted As CustomerACKCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fldevez/CreateCustomerXML", RequestNamespace:="http://fldevez/", ResponseNamespace:="http://fldevez/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateCustomerXML(ByVal iScanID As Integer, ByVal ssn As String, ByVal mobileNumber As String, ByVal iLanguageCode As Integer, ByVal WksID As Integer) As String
            Dim results() As Object = Me.Invoke("CreateCustomerXML", New Object() {iScanID, ssn, mobileNumber, iLanguageCode, WksID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateCustomerXMLAsync(ByVal iScanID As Integer, ByVal ssn As String, ByVal mobileNumber As String, ByVal iLanguageCode As Integer, ByVal WksID As Integer)
            Me.CreateCustomerXMLAsync(iScanID, ssn, mobileNumber, iLanguageCode, WksID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateCustomerXMLAsync(ByVal iScanID As Integer, ByVal ssn As String, ByVal mobileNumber As String, ByVal iLanguageCode As Integer, ByVal WksID As Integer, ByVal userState As Object)
            If (Me.CreateCustomerXMLOperationCompleted Is Nothing) Then
                Me.CreateCustomerXMLOperationCompleted = AddressOf Me.OnCreateCustomerXMLOperationCompleted
            End If
            Me.InvokeAsync("CreateCustomerXML", New Object() {iScanID, ssn, mobileNumber, iLanguageCode, WksID}, Me.CreateCustomerXMLOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateCustomerXMLOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateCustomerXMLCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateCustomerXMLCompleted(Me, New CreateCustomerXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fldevez/CreateCustomer", RequestNamespace:="http://fldevez/", ResponseNamespace:="http://fldevez/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateCustomer(ByVal iScanID As Integer, ByVal ssn As String, ByVal mobileNumber As String, ByVal iLanguageCode As Integer, ByVal pWksID As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CreateCustomer", New Object() {iScanID, ssn, mobileNumber, iLanguageCode, pWksID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateCustomerAsync(ByVal iScanID As Integer, ByVal ssn As String, ByVal mobileNumber As String, ByVal iLanguageCode As Integer, ByVal pWksID As Integer)
            Me.CreateCustomerAsync(iScanID, ssn, mobileNumber, iLanguageCode, pWksID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateCustomerAsync(ByVal iScanID As Integer, ByVal ssn As String, ByVal mobileNumber As String, ByVal iLanguageCode As Integer, ByVal pWksID As Integer, ByVal userState As Object)
            If (Me.CreateCustomerOperationCompleted Is Nothing) Then
                Me.CreateCustomerOperationCompleted = AddressOf Me.OnCreateCustomerOperationCompleted
            End If
            Me.InvokeAsync("CreateCustomer", New Object() {iScanID, ssn, mobileNumber, iLanguageCode, pWksID}, Me.CreateCustomerOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateCustomerOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateCustomerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateCustomerCompleted(Me, New CreateCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fldevez/AddCompany", RequestNamespace:="http://fldevez/", ResponseNamespace:="http://fldevez/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddCompany(ByVal objCompany As Companies, ByVal PAN As String) As Integer
            Dim results() As Object = Me.Invoke("AddCompany", New Object() {objCompany, PAN})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddCompanyAsync(ByVal objCompany As Companies, ByVal PAN As String)
            Me.AddCompanyAsync(objCompany, PAN, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddCompanyAsync(ByVal objCompany As Companies, ByVal PAN As String, ByVal userState As Object)
            If (Me.AddCompanyOperationCompleted Is Nothing) Then
                Me.AddCompanyOperationCompleted = AddressOf Me.OnAddCompanyOperationCompleted
            End If
            Me.InvokeAsync("AddCompany", New Object() {objCompany, PAN}, Me.AddCompanyOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddCompanyOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddCompanyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddCompanyCompleted(Me, New AddCompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fldevez/UpdateCompanyCardNumber", RequestNamespace:="http://fldevez/", ResponseNamespace:="http://fldevez/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateCompanyCardNumber(ByVal iCompanyNumber As Integer, ByVal iCardID As Integer, ByVal PAN As String) As Integer
            Dim results() As Object = Me.Invoke("UpdateCompanyCardNumber", New Object() {iCompanyNumber, iCardID, PAN})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateCompanyCardNumberAsync(ByVal iCompanyNumber As Integer, ByVal iCardID As Integer, ByVal PAN As String)
            Me.UpdateCompanyCardNumberAsync(iCompanyNumber, iCardID, PAN, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateCompanyCardNumberAsync(ByVal iCompanyNumber As Integer, ByVal iCardID As Integer, ByVal PAN As String, ByVal userState As Object)
            If (Me.UpdateCompanyCardNumberOperationCompleted Is Nothing) Then
                Me.UpdateCompanyCardNumberOperationCompleted = AddressOf Me.OnUpdateCompanyCardNumberOperationCompleted
            End If
            Me.InvokeAsync("UpdateCompanyCardNumber", New Object() {iCompanyNumber, iCardID, PAN}, Me.UpdateCompanyCardNumberOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateCompanyCardNumberOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateCompanyCardNumberCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateCompanyCardNumberCompleted(Me, New UpdateCompanyCardNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fldevez/CompareCustomerData", RequestNamespace:="http://fldevez/", ResponseNamespace:="http://fldevez/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CompareCustomerData(ByVal iScanID As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CompareCustomerData", New Object() {iScanID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CompareCustomerDataAsync(ByVal iScanID As Integer)
            Me.CompareCustomerDataAsync(iScanID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CompareCustomerDataAsync(ByVal iScanID As Integer, ByVal userState As Object)
            If (Me.CompareCustomerDataOperationCompleted Is Nothing) Then
                Me.CompareCustomerDataOperationCompleted = AddressOf Me.OnCompareCustomerDataOperationCompleted
            End If
            Me.InvokeAsync("CompareCustomerData", New Object() {iScanID}, Me.CompareCustomerDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnCompareCustomerDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.CompareCustomerDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CompareCustomerDataCompleted(Me, New CompareCustomerDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fldevez/CompareCustomerDataXML", RequestNamespace:="http://fldevez/", ResponseNamespace:="http://fldevez/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CompareCustomerDataXML(ByVal iScanID As Integer) As String
            Dim results() As Object = Me.Invoke("CompareCustomerDataXML", New Object() {iScanID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CompareCustomerDataXMLAsync(ByVal iScanID As Integer)
            Me.CompareCustomerDataXMLAsync(iScanID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CompareCustomerDataXMLAsync(ByVal iScanID As Integer, ByVal userState As Object)
            If (Me.CompareCustomerDataXMLOperationCompleted Is Nothing) Then
                Me.CompareCustomerDataXMLOperationCompleted = AddressOf Me.OnCompareCustomerDataXMLOperationCompleted
            End If
            Me.InvokeAsync("CompareCustomerDataXML", New Object() {iScanID}, Me.CompareCustomerDataXMLOperationCompleted, userState)
        End Sub
        
        Private Sub OnCompareCustomerDataXMLOperationCompleted(ByVal arg As Object)
            If (Not (Me.CompareCustomerDataXMLCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CompareCustomerDataXMLCompleted(Me, New CompareCustomerDataXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fldevez/ATMLogin", RequestNamespace:="http://fldevez/", ResponseNamespace:="http://fldevez/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ATMLogin(ByVal UserName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ATMLogin", New Object() {UserName})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ATMLoginAsync(ByVal UserName As String)
            Me.ATMLoginAsync(UserName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ATMLoginAsync(ByVal UserName As String, ByVal userState As Object)
            If (Me.ATMLoginOperationCompleted Is Nothing) Then
                Me.ATMLoginOperationCompleted = AddressOf Me.OnATMLoginOperationCompleted
            End If
            Me.InvokeAsync("ATMLogin", New Object() {UserName}, Me.ATMLoginOperationCompleted, userState)
        End Sub
        
        Private Sub OnATMLoginOperationCompleted(ByVal arg As Object)
            If (Not (Me.ATMLoginCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ATMLoginCompleted(Me, New ATMLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fldevez/CustomerACK", RequestNamespace:="http://fldevez/", ResponseNamespace:="http://fldevez/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CustomerACK(ByVal photoID As String, ByVal state As String, ByVal dob As Date, ByRef iRC As Integer, ByRef RC1 As String)
            Dim results() As Object = Me.Invoke("CustomerACK", New Object() {photoID, state, dob, iRC, RC1})
            iRC = CType(results(0),Integer)
            RC1 = CType(results(1),String)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CustomerACKAsync(ByVal photoID As String, ByVal state As String, ByVal dob As Date, ByVal iRC As Integer, ByVal RC1 As String)
            Me.CustomerACKAsync(photoID, state, dob, iRC, RC1, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CustomerACKAsync(ByVal photoID As String, ByVal state As String, ByVal dob As Date, ByVal iRC As Integer, ByVal RC1 As String, ByVal userState As Object)
            If (Me.CustomerACKOperationCompleted Is Nothing) Then
                Me.CustomerACKOperationCompleted = AddressOf Me.OnCustomerACKOperationCompleted
            End If
            Me.InvokeAsync("CustomerACK", New Object() {photoID, state, dob, iRC, RC1}, Me.CustomerACKOperationCompleted, userState)
        End Sub
        
        Private Sub OnCustomerACKOperationCompleted(ByVal arg As Object)
            If (Not (Me.CustomerACKCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CustomerACKCompleted(Me, New CustomerACKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://fldevez/")>  _
    Partial Public Class Companies
        Inherits EntityObject
        
        Private isNewField As Boolean
        
        Private companyNumberField As Integer
        
        Private companyNameField As String
        
        Private createDateField As System.Nullable(Of Date)
        
        Private createUserField As String
        
        Private modifiedDateField As System.Nullable(Of Date)
        
        Private modifiedUserField As String
        
        Private entityIDField As System.Nullable(Of Integer)
        
        Private tierField As System.Nullable(Of Integer)
        
        Private backgroundCheckField As System.Nullable(Of Integer)
        
        Private customerActivationField As System.Nullable(Of Integer)
        
        Private uSorForeignPhotoIDField As System.Nullable(Of Integer)
        
        Private uSPhotoIDField As System.Nullable(Of Integer)
        
        Private activeField As System.Nullable(Of Integer)
        
        Private cardIDField As System.Nullable(Of Integer)
        
        Private groupsReferenceField As EntityReferenceOfGroups
        
        '''<remarks/>
        Public Property IsNew() As Boolean
            Get
                Return Me.isNewField
            End Get
            Set
                Me.isNewField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CompanyNumber() As Integer
            Get
                Return Me.companyNumberField
            End Get
            Set
                Me.companyNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CompanyName() As String
            Get
                Return Me.companyNameField
            End Get
            Set
                Me.companyNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property CreateDate() As System.Nullable(Of Date)
            Get
                Return Me.createDateField
            End Get
            Set
                Me.createDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreateUser() As String
            Get
                Return Me.createUserField
            End Get
            Set
                Me.createUserField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ModifiedDate() As System.Nullable(Of Date)
            Get
                Return Me.modifiedDateField
            End Get
            Set
                Me.modifiedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ModifiedUser() As String
            Get
                Return Me.modifiedUserField
            End Get
            Set
                Me.modifiedUserField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property EntityID() As System.Nullable(Of Integer)
            Get
                Return Me.entityIDField
            End Get
            Set
                Me.entityIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Tier() As System.Nullable(Of Integer)
            Get
                Return Me.tierField
            End Get
            Set
                Me.tierField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property BackgroundCheck() As System.Nullable(Of Integer)
            Get
                Return Me.backgroundCheckField
            End Get
            Set
                Me.backgroundCheckField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property CustomerActivation() As System.Nullable(Of Integer)
            Get
                Return Me.customerActivationField
            End Get
            Set
                Me.customerActivationField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property USorForeignPhotoID() As System.Nullable(Of Integer)
            Get
                Return Me.uSorForeignPhotoIDField
            End Get
            Set
                Me.uSorForeignPhotoIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property USPhotoID() As System.Nullable(Of Integer)
            Get
                Return Me.uSPhotoIDField
            End Get
            Set
                Me.uSPhotoIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Active() As System.Nullable(Of Integer)
            Get
                Return Me.activeField
            End Get
            Set
                Me.activeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property CardID() As System.Nullable(Of Integer)
            Get
                Return Me.cardIDField
            End Get
            Set
                Me.cardIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property GroupsReference() As EntityReferenceOfGroups
            Get
                Return Me.groupsReferenceField
            End Get
            Set
                Me.groupsReferenceField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://fldevez/")>  _
    Partial Public Class EntityReferenceOfGroups
        Inherits EntityReference
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(EntityReferenceOfGroups)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://fldevez/")>  _
    Partial Public MustInherit Class EntityReference
        Inherits RelatedEnd
        
        Private entityKeyField As EntityKey
        
        '''<remarks/>
        Public Property EntityKey() As EntityKey
            Get
                Return Me.entityKeyField
            End Get
            Set
                Me.entityKeyField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://fldevez/")>  _
    Partial Public Class EntityKey
        
        Private entitySetNameField As String
        
        Private entityContainerNameField As String
        
        Private entityKeyValuesField() As EntityKeyMember
        
        '''<remarks/>
        Public Property EntitySetName() As String
            Get
                Return Me.entitySetNameField
            End Get
            Set
                Me.entitySetNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EntityContainerName() As String
            Get
                Return Me.entityContainerNameField
            End Get
            Set
                Me.entityContainerNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EntityKeyValues() As EntityKeyMember()
            Get
                Return Me.entityKeyValuesField
            End Get
            Set
                Me.entityKeyValuesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://fldevez/")>  _
    Partial Public Class EntityKeyMember
        
        Private keyField As String
        
        Private valueField As Object
        
        '''<remarks/>
        Public Property Key() As String
            Get
                Return Me.keyField
            End Get
            Set
                Me.keyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Value() As Object
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(EntityReference)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(EntityReferenceOfGroups)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://fldevez/")>  _
    Partial Public MustInherit Class RelatedEnd
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(EntityObject)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(Companies)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://fldevez/")>  _
    Partial Public MustInherit Class StructuralObject
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(Companies)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://fldevez/")>  _
    Partial Public MustInherit Class EntityObject
        Inherits StructuralObject
        
        Private entityKeyField As EntityKey
        
        '''<remarks/>
        Public Property EntityKey() As EntityKey
            Get
                Return Me.entityKeyField
            End Get
            Set
                Me.entityKeyField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub CreateCustomerXMLCompletedEventHandler(ByVal sender As Object, ByVal e As CreateCustomerXMLCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateCustomerXMLCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub CreateCustomerCompletedEventHandler(ByVal sender As Object, ByVal e As CreateCustomerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateCustomerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub AddCompanyCompletedEventHandler(ByVal sender As Object, ByVal e As AddCompanyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddCompanyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub UpdateCompanyCardNumberCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateCompanyCardNumberCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateCompanyCardNumberCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub CompareCustomerDataCompletedEventHandler(ByVal sender As Object, ByVal e As CompareCustomerDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CompareCustomerDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub CompareCustomerDataXMLCompletedEventHandler(ByVal sender As Object, ByVal e As CompareCustomerDataXMLCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CompareCustomerDataXMLCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub ATMLoginCompletedEventHandler(ByVal sender As Object, ByVal e As ATMLoginCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ATMLoginCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub CustomerACKCompletedEventHandler(ByVal sender As Object, ByVal e As CustomerACKCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CustomerACKCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property iRC() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property RC1() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
End Namespace
