'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.296
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.296.
'
Namespace net.everification.transactions
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="WrapEVSSoap", [Namespace]:="http://transactions.everification.net/EIPSServices/WrapEVS")>  _
    Partial Public Class WrapEVS
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetEVSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEVSFullICOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEVSWithLangOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEVSWithIPEMailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAuthAnswersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetInternationalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.Kiosk.My.MySettings.Default.Kiosk_net_everification_transactions_WrapEVS
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetEVSCompleted As GetEVSCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEVSFullICCompleted As GetEVSFullICCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEVSWithLangCompleted As GetEVSWithLangCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEVSWithIPEMailCompleted As GetEVSWithIPEMailCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAuthAnswersCompleted As GetAuthAnswersCompletedEventHandler
        
        '''<remarks/>
        Public Event GetInternationalCompleted As GetInternationalCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://transactions.everification.net/EIPSServices/WrapEVS/GetEVS", RequestNamespace:="http://transactions.everification.net/EIPSServices/WrapEVS", ResponseNamespace:="http://transactions.everification.net/EIPSServices/WrapEVS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEVS(ByVal strSocialSecurity As String, ByVal strOwnNameFirst As String, ByVal strOwnNameLast As String, ByVal strTelephone As String, ByVal strDrivingLicenseState As String, ByVal strDrivingLicense As String, ByVal strCustRefnumber As String, ByVal strCustPassword As String, ByVal strAddress As String, ByVal strCurAddrCity As String, ByVal strCurAddrState As String, ByVal strCurAddrZip As String) As String
            Dim results() As Object = Me.Invoke("GetEVS", New Object() {strSocialSecurity, strOwnNameFirst, strOwnNameLast, strTelephone, strDrivingLicenseState, strDrivingLicense, strCustRefnumber, strCustPassword, strAddress, strCurAddrCity, strCurAddrState, strCurAddrZip})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEVSAsync(ByVal strSocialSecurity As String, ByVal strOwnNameFirst As String, ByVal strOwnNameLast As String, ByVal strTelephone As String, ByVal strDrivingLicenseState As String, ByVal strDrivingLicense As String, ByVal strCustRefnumber As String, ByVal strCustPassword As String, ByVal strAddress As String, ByVal strCurAddrCity As String, ByVal strCurAddrState As String, ByVal strCurAddrZip As String)
            Me.GetEVSAsync(strSocialSecurity, strOwnNameFirst, strOwnNameLast, strTelephone, strDrivingLicenseState, strDrivingLicense, strCustRefnumber, strCustPassword, strAddress, strCurAddrCity, strCurAddrState, strCurAddrZip, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEVSAsync(ByVal strSocialSecurity As String, ByVal strOwnNameFirst As String, ByVal strOwnNameLast As String, ByVal strTelephone As String, ByVal strDrivingLicenseState As String, ByVal strDrivingLicense As String, ByVal strCustRefnumber As String, ByVal strCustPassword As String, ByVal strAddress As String, ByVal strCurAddrCity As String, ByVal strCurAddrState As String, ByVal strCurAddrZip As String, ByVal userState As Object)
            If (Me.GetEVSOperationCompleted Is Nothing) Then
                Me.GetEVSOperationCompleted = AddressOf Me.OnGetEVSOperationCompleted
            End If
            Me.InvokeAsync("GetEVS", New Object() {strSocialSecurity, strOwnNameFirst, strOwnNameLast, strTelephone, strDrivingLicenseState, strDrivingLicense, strCustRefnumber, strCustPassword, strAddress, strCurAddrCity, strCurAddrState, strCurAddrZip}, Me.GetEVSOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEVSOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEVSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEVSCompleted(Me, New GetEVSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://transactions.everification.net/EIPSServices/WrapEVS/GetEVSFullIC", RequestNamespace:="http://transactions.everification.net/EIPSServices/WrapEVS", ResponseNamespace:="http://transactions.everification.net/EIPSServices/WrapEVS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEVSFullIC( _
                    ByVal strSocialSecurity As String,  _
                    ByVal strOwnNameFirst As String,  _
                    ByVal strOwnNameMiddle As String,  _
                    ByVal strOwnNameLast As String,  _
                    ByVal strTelephone As String,  _
                    ByVal strDrivingLicenseState As String,  _
                    ByVal strDrivingLicense As String,  _
                    ByVal strCustRefnumber As String,  _
                    ByVal strCustPassword As String,  _
                    ByVal strEmail As String,  _
                    ByVal strHouseNumber As String,  _
                    ByVal strPreDirectional As String,  _
                    ByVal strStreetname As String,  _
                    ByVal strStreetType As String,  _
                    ByVal strPostDirectional As String,  _
                    ByVal strApartmentNum As String,  _
                    ByVal strCurAddrCity As String,  _
                    ByVal strCurAddrState As String,  _
                    ByVal strCurAddrZip As String,  _
                    ByVal strIPAddress As String,  _
                    ByVal strUserID As String,  _
                    ByVal strBranch As String,  _
                    ByVal strICDLID_Formatted As String,  _
                    ByVal strICDLID_Raw As String,  _
                    ByVal strICDLID_Jurisdiction As String,  _
                    ByVal strICDLExpirationDate As String,  _
                    ByVal strICDLExpired As String,  _
                    ByVal strICDLDateofBirth As String,  _
                    ByVal strICDLAge As String,  _
                    ByVal strICDLIssueDate As String,  _
                    ByVal strICDLName_First As String,  _
                    ByVal strICDLName_Last As String,  _
                    ByVal strICDLName_Middle As String,  _
                    ByVal strICDLName_MiddleInitial As String,  _
                    ByVal strICDLName_FirstMiddleLast As String,  _
                    ByVal strICDLName_FirstLast As String,  _
                    ByVal strICDLName_LastFirst As String,  _
                    ByVal strICDLName_LastSuffix As String,  _
                    ByVal strICDLName_Suffix As String,  _
                    ByVal strICDLAddress As String,  _
                    ByVal strICDLAddress2 As String,  _
                    ByVal strICDLCity As String,  _
                    ByVal strICDLPostalCode As String,  _
                    ByVal strICDLPostalCodeMain As String,  _
                    ByVal strICDLPostalCodePlus4Codes As String,  _
                    ByVal strICDLJurisdiction As String,  _
                    ByVal strICDLGender As String,  _
                    ByVal strICDLGenderFirstLetter As String,  _
                    ByVal strICDLHairColor As String,  _
                    ByVal strICDLEyeColor As String,  _
                    ByVal strICDLWeight_Lbs As String,  _
                    ByVal strICDLWeight_Kg As String,  _
                    ByVal strICDLHeight_FtIn As String,  _
                    ByVal strICDLHeight_Feet As String,  _
                    ByVal strICDLHeight_Inches As String,  _
                    ByVal strICDLHeight_Cm As String,  _
                    ByVal strICDLDriverClassCodes As String,  _
                    ByVal strICDLRestrictionCodes As String,  _
                    ByVal strICDLEndorsementCodes As String,  _
                    ByVal strICDLSocialSecurityNumber As String,  _
                    ByVal strICDLOrganDonor As String,  _
                    ByVal strICDLOrganDonorAbbrev As String,  _
                    ByVal strICDLMediaType As String,  _
                    ByVal strICDLProcessResult As String,  _
                    ByVal strICDLSerialNumber As String,  _
                    ByVal strICDLUniqueID As String,  _
                    ByVal strICDLIsTestCard As String,  _
                    ByVal strICDLDateofBirthMonth As String,  _
                    ByVal strICDLDateofBirthDay As String,  _
                    ByVal strICDLDateofBirthYear As String,  _
                    ByVal strICDLDateofExpirationDay As String,  _
                    ByVal strICDLDateofExpirationMonth As String,  _
                    ByVal strICDLDateofExpirationYear As String,  _
                    ByVal strICDLDateofIssueMonth As String,  _
                    ByVal strICDLDateofIssueDay As String,  _
                    ByVal strICDLDateofIssueYear As String,  _
                    ByVal blICDLSaveOnly As Boolean) As String
            Dim results() As Object = Me.Invoke("GetEVSFullIC", New Object() {strSocialSecurity, strOwnNameFirst, strOwnNameMiddle, strOwnNameLast, strTelephone, strDrivingLicenseState, strDrivingLicense, strCustRefnumber, strCustPassword, strEmail, strHouseNumber, strPreDirectional, strStreetname, strStreetType, strPostDirectional, strApartmentNum, strCurAddrCity, strCurAddrState, strCurAddrZip, strIPAddress, strUserID, strBranch, strICDLID_Formatted, strICDLID_Raw, strICDLID_Jurisdiction, strICDLExpirationDate, strICDLExpired, strICDLDateofBirth, strICDLAge, strICDLIssueDate, strICDLName_First, strICDLName_Last, strICDLName_Middle, strICDLName_MiddleInitial, strICDLName_FirstMiddleLast, strICDLName_FirstLast, strICDLName_LastFirst, strICDLName_LastSuffix, strICDLName_Suffix, strICDLAddress, strICDLAddress2, strICDLCity, strICDLPostalCode, strICDLPostalCodeMain, strICDLPostalCodePlus4Codes, strICDLJurisdiction, strICDLGender, strICDLGenderFirstLetter, strICDLHairColor, strICDLEyeColor, strICDLWeight_Lbs, strICDLWeight_Kg, strICDLHeight_FtIn, strICDLHeight_Feet, strICDLHeight_Inches, strICDLHeight_Cm, strICDLDriverClassCodes, strICDLRestrictionCodes, strICDLEndorsementCodes, strICDLSocialSecurityNumber, strICDLOrganDonor, strICDLOrganDonorAbbrev, strICDLMediaType, strICDLProcessResult, strICDLSerialNumber, strICDLUniqueID, strICDLIsTestCard, strICDLDateofBirthMonth, strICDLDateofBirthDay, strICDLDateofBirthYear, strICDLDateofExpirationDay, strICDLDateofExpirationMonth, strICDLDateofExpirationYear, strICDLDateofIssueMonth, strICDLDateofIssueDay, strICDLDateofIssueYear, blICDLSaveOnly})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEVSFullICAsync( _
                    ByVal strSocialSecurity As String,  _
                    ByVal strOwnNameFirst As String,  _
                    ByVal strOwnNameMiddle As String,  _
                    ByVal strOwnNameLast As String,  _
                    ByVal strTelephone As String,  _
                    ByVal strDrivingLicenseState As String,  _
                    ByVal strDrivingLicense As String,  _
                    ByVal strCustRefnumber As String,  _
                    ByVal strCustPassword As String,  _
                    ByVal strEmail As String,  _
                    ByVal strHouseNumber As String,  _
                    ByVal strPreDirectional As String,  _
                    ByVal strStreetname As String,  _
                    ByVal strStreetType As String,  _
                    ByVal strPostDirectional As String,  _
                    ByVal strApartmentNum As String,  _
                    ByVal strCurAddrCity As String,  _
                    ByVal strCurAddrState As String,  _
                    ByVal strCurAddrZip As String,  _
                    ByVal strIPAddress As String,  _
                    ByVal strUserID As String,  _
                    ByVal strBranch As String,  _
                    ByVal strICDLID_Formatted As String,  _
                    ByVal strICDLID_Raw As String,  _
                    ByVal strICDLID_Jurisdiction As String,  _
                    ByVal strICDLExpirationDate As String,  _
                    ByVal strICDLExpired As String,  _
                    ByVal strICDLDateofBirth As String,  _
                    ByVal strICDLAge As String,  _
                    ByVal strICDLIssueDate As String,  _
                    ByVal strICDLName_First As String,  _
                    ByVal strICDLName_Last As String,  _
                    ByVal strICDLName_Middle As String,  _
                    ByVal strICDLName_MiddleInitial As String,  _
                    ByVal strICDLName_FirstMiddleLast As String,  _
                    ByVal strICDLName_FirstLast As String,  _
                    ByVal strICDLName_LastFirst As String,  _
                    ByVal strICDLName_LastSuffix As String,  _
                    ByVal strICDLName_Suffix As String,  _
                    ByVal strICDLAddress As String,  _
                    ByVal strICDLAddress2 As String,  _
                    ByVal strICDLCity As String,  _
                    ByVal strICDLPostalCode As String,  _
                    ByVal strICDLPostalCodeMain As String,  _
                    ByVal strICDLPostalCodePlus4Codes As String,  _
                    ByVal strICDLJurisdiction As String,  _
                    ByVal strICDLGender As String,  _
                    ByVal strICDLGenderFirstLetter As String,  _
                    ByVal strICDLHairColor As String,  _
                    ByVal strICDLEyeColor As String,  _
                    ByVal strICDLWeight_Lbs As String,  _
                    ByVal strICDLWeight_Kg As String,  _
                    ByVal strICDLHeight_FtIn As String,  _
                    ByVal strICDLHeight_Feet As String,  _
                    ByVal strICDLHeight_Inches As String,  _
                    ByVal strICDLHeight_Cm As String,  _
                    ByVal strICDLDriverClassCodes As String,  _
                    ByVal strICDLRestrictionCodes As String,  _
                    ByVal strICDLEndorsementCodes As String,  _
                    ByVal strICDLSocialSecurityNumber As String,  _
                    ByVal strICDLOrganDonor As String,  _
                    ByVal strICDLOrganDonorAbbrev As String,  _
                    ByVal strICDLMediaType As String,  _
                    ByVal strICDLProcessResult As String,  _
                    ByVal strICDLSerialNumber As String,  _
                    ByVal strICDLUniqueID As String,  _
                    ByVal strICDLIsTestCard As String,  _
                    ByVal strICDLDateofBirthMonth As String,  _
                    ByVal strICDLDateofBirthDay As String,  _
                    ByVal strICDLDateofBirthYear As String,  _
                    ByVal strICDLDateofExpirationDay As String,  _
                    ByVal strICDLDateofExpirationMonth As String,  _
                    ByVal strICDLDateofExpirationYear As String,  _
                    ByVal strICDLDateofIssueMonth As String,  _
                    ByVal strICDLDateofIssueDay As String,  _
                    ByVal strICDLDateofIssueYear As String,  _
                    ByVal blICDLSaveOnly As Boolean)
            Me.GetEVSFullICAsync(strSocialSecurity, strOwnNameFirst, strOwnNameMiddle, strOwnNameLast, strTelephone, strDrivingLicenseState, strDrivingLicense, strCustRefnumber, strCustPassword, strEmail, strHouseNumber, strPreDirectional, strStreetname, strStreetType, strPostDirectional, strApartmentNum, strCurAddrCity, strCurAddrState, strCurAddrZip, strIPAddress, strUserID, strBranch, strICDLID_Formatted, strICDLID_Raw, strICDLID_Jurisdiction, strICDLExpirationDate, strICDLExpired, strICDLDateofBirth, strICDLAge, strICDLIssueDate, strICDLName_First, strICDLName_Last, strICDLName_Middle, strICDLName_MiddleInitial, strICDLName_FirstMiddleLast, strICDLName_FirstLast, strICDLName_LastFirst, strICDLName_LastSuffix, strICDLName_Suffix, strICDLAddress, strICDLAddress2, strICDLCity, strICDLPostalCode, strICDLPostalCodeMain, strICDLPostalCodePlus4Codes, strICDLJurisdiction, strICDLGender, strICDLGenderFirstLetter, strICDLHairColor, strICDLEyeColor, strICDLWeight_Lbs, strICDLWeight_Kg, strICDLHeight_FtIn, strICDLHeight_Feet, strICDLHeight_Inches, strICDLHeight_Cm, strICDLDriverClassCodes, strICDLRestrictionCodes, strICDLEndorsementCodes, strICDLSocialSecurityNumber, strICDLOrganDonor, strICDLOrganDonorAbbrev, strICDLMediaType, strICDLProcessResult, strICDLSerialNumber, strICDLUniqueID, strICDLIsTestCard, strICDLDateofBirthMonth, strICDLDateofBirthDay, strICDLDateofBirthYear, strICDLDateofExpirationDay, strICDLDateofExpirationMonth, strICDLDateofExpirationYear, strICDLDateofIssueMonth, strICDLDateofIssueDay, strICDLDateofIssueYear, blICDLSaveOnly, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEVSFullICAsync( _
                    ByVal strSocialSecurity As String,  _
                    ByVal strOwnNameFirst As String,  _
                    ByVal strOwnNameMiddle As String,  _
                    ByVal strOwnNameLast As String,  _
                    ByVal strTelephone As String,  _
                    ByVal strDrivingLicenseState As String,  _
                    ByVal strDrivingLicense As String,  _
                    ByVal strCustRefnumber As String,  _
                    ByVal strCustPassword As String,  _
                    ByVal strEmail As String,  _
                    ByVal strHouseNumber As String,  _
                    ByVal strPreDirectional As String,  _
                    ByVal strStreetname As String,  _
                    ByVal strStreetType As String,  _
                    ByVal strPostDirectional As String,  _
                    ByVal strApartmentNum As String,  _
                    ByVal strCurAddrCity As String,  _
                    ByVal strCurAddrState As String,  _
                    ByVal strCurAddrZip As String,  _
                    ByVal strIPAddress As String,  _
                    ByVal strUserID As String,  _
                    ByVal strBranch As String,  _
                    ByVal strICDLID_Formatted As String,  _
                    ByVal strICDLID_Raw As String,  _
                    ByVal strICDLID_Jurisdiction As String,  _
                    ByVal strICDLExpirationDate As String,  _
                    ByVal strICDLExpired As String,  _
                    ByVal strICDLDateofBirth As String,  _
                    ByVal strICDLAge As String,  _
                    ByVal strICDLIssueDate As String,  _
                    ByVal strICDLName_First As String,  _
                    ByVal strICDLName_Last As String,  _
                    ByVal strICDLName_Middle As String,  _
                    ByVal strICDLName_MiddleInitial As String,  _
                    ByVal strICDLName_FirstMiddleLast As String,  _
                    ByVal strICDLName_FirstLast As String,  _
                    ByVal strICDLName_LastFirst As String,  _
                    ByVal strICDLName_LastSuffix As String,  _
                    ByVal strICDLName_Suffix As String,  _
                    ByVal strICDLAddress As String,  _
                    ByVal strICDLAddress2 As String,  _
                    ByVal strICDLCity As String,  _
                    ByVal strICDLPostalCode As String,  _
                    ByVal strICDLPostalCodeMain As String,  _
                    ByVal strICDLPostalCodePlus4Codes As String,  _
                    ByVal strICDLJurisdiction As String,  _
                    ByVal strICDLGender As String,  _
                    ByVal strICDLGenderFirstLetter As String,  _
                    ByVal strICDLHairColor As String,  _
                    ByVal strICDLEyeColor As String,  _
                    ByVal strICDLWeight_Lbs As String,  _
                    ByVal strICDLWeight_Kg As String,  _
                    ByVal strICDLHeight_FtIn As String,  _
                    ByVal strICDLHeight_Feet As String,  _
                    ByVal strICDLHeight_Inches As String,  _
                    ByVal strICDLHeight_Cm As String,  _
                    ByVal strICDLDriverClassCodes As String,  _
                    ByVal strICDLRestrictionCodes As String,  _
                    ByVal strICDLEndorsementCodes As String,  _
                    ByVal strICDLSocialSecurityNumber As String,  _
                    ByVal strICDLOrganDonor As String,  _
                    ByVal strICDLOrganDonorAbbrev As String,  _
                    ByVal strICDLMediaType As String,  _
                    ByVal strICDLProcessResult As String,  _
                    ByVal strICDLSerialNumber As String,  _
                    ByVal strICDLUniqueID As String,  _
                    ByVal strICDLIsTestCard As String,  _
                    ByVal strICDLDateofBirthMonth As String,  _
                    ByVal strICDLDateofBirthDay As String,  _
                    ByVal strICDLDateofBirthYear As String,  _
                    ByVal strICDLDateofExpirationDay As String,  _
                    ByVal strICDLDateofExpirationMonth As String,  _
                    ByVal strICDLDateofExpirationYear As String,  _
                    ByVal strICDLDateofIssueMonth As String,  _
                    ByVal strICDLDateofIssueDay As String,  _
                    ByVal strICDLDateofIssueYear As String,  _
                    ByVal blICDLSaveOnly As Boolean,  _
                    ByVal userState As Object)
            If (Me.GetEVSFullICOperationCompleted Is Nothing) Then
                Me.GetEVSFullICOperationCompleted = AddressOf Me.OnGetEVSFullICOperationCompleted
            End If
            Me.InvokeAsync("GetEVSFullIC", New Object() {strSocialSecurity, strOwnNameFirst, strOwnNameMiddle, strOwnNameLast, strTelephone, strDrivingLicenseState, strDrivingLicense, strCustRefnumber, strCustPassword, strEmail, strHouseNumber, strPreDirectional, strStreetname, strStreetType, strPostDirectional, strApartmentNum, strCurAddrCity, strCurAddrState, strCurAddrZip, strIPAddress, strUserID, strBranch, strICDLID_Formatted, strICDLID_Raw, strICDLID_Jurisdiction, strICDLExpirationDate, strICDLExpired, strICDLDateofBirth, strICDLAge, strICDLIssueDate, strICDLName_First, strICDLName_Last, strICDLName_Middle, strICDLName_MiddleInitial, strICDLName_FirstMiddleLast, strICDLName_FirstLast, strICDLName_LastFirst, strICDLName_LastSuffix, strICDLName_Suffix, strICDLAddress, strICDLAddress2, strICDLCity, strICDLPostalCode, strICDLPostalCodeMain, strICDLPostalCodePlus4Codes, strICDLJurisdiction, strICDLGender, strICDLGenderFirstLetter, strICDLHairColor, strICDLEyeColor, strICDLWeight_Lbs, strICDLWeight_Kg, strICDLHeight_FtIn, strICDLHeight_Feet, strICDLHeight_Inches, strICDLHeight_Cm, strICDLDriverClassCodes, strICDLRestrictionCodes, strICDLEndorsementCodes, strICDLSocialSecurityNumber, strICDLOrganDonor, strICDLOrganDonorAbbrev, strICDLMediaType, strICDLProcessResult, strICDLSerialNumber, strICDLUniqueID, strICDLIsTestCard, strICDLDateofBirthMonth, strICDLDateofBirthDay, strICDLDateofBirthYear, strICDLDateofExpirationDay, strICDLDateofExpirationMonth, strICDLDateofExpirationYear, strICDLDateofIssueMonth, strICDLDateofIssueDay, strICDLDateofIssueYear, blICDLSaveOnly}, Me.GetEVSFullICOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEVSFullICOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEVSFullICCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEVSFullICCompleted(Me, New GetEVSFullICCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://transactions.everification.net/EIPSServices/WrapEVS/GetEVSWithLang", RequestNamespace:="http://transactions.everification.net/EIPSServices/WrapEVS", ResponseNamespace:="http://transactions.everification.net/EIPSServices/WrapEVS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEVSWithLang(ByVal strSocialSecurity As String, ByVal strOwnNameFirst As String, ByVal strOwnNameLast As String, ByVal strTelephone As String, ByVal strDrivingLicenseState As String, ByVal strDrivingLicense As String, ByVal strCustRefnumber As String, ByVal strCustPassword As String, ByVal strAddress As String, ByVal strCurAddrCity As String, ByVal strCurAddrState As String, ByVal strCurAddrZip As String, ByVal strLanguage As String) As String
            Dim results() As Object = Me.Invoke("GetEVSWithLang", New Object() {strSocialSecurity, strOwnNameFirst, strOwnNameLast, strTelephone, strDrivingLicenseState, strDrivingLicense, strCustRefnumber, strCustPassword, strAddress, strCurAddrCity, strCurAddrState, strCurAddrZip, strLanguage})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEVSWithLangAsync(ByVal strSocialSecurity As String, ByVal strOwnNameFirst As String, ByVal strOwnNameLast As String, ByVal strTelephone As String, ByVal strDrivingLicenseState As String, ByVal strDrivingLicense As String, ByVal strCustRefnumber As String, ByVal strCustPassword As String, ByVal strAddress As String, ByVal strCurAddrCity As String, ByVal strCurAddrState As String, ByVal strCurAddrZip As String, ByVal strLanguage As String)
            Me.GetEVSWithLangAsync(strSocialSecurity, strOwnNameFirst, strOwnNameLast, strTelephone, strDrivingLicenseState, strDrivingLicense, strCustRefnumber, strCustPassword, strAddress, strCurAddrCity, strCurAddrState, strCurAddrZip, strLanguage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEVSWithLangAsync(ByVal strSocialSecurity As String, ByVal strOwnNameFirst As String, ByVal strOwnNameLast As String, ByVal strTelephone As String, ByVal strDrivingLicenseState As String, ByVal strDrivingLicense As String, ByVal strCustRefnumber As String, ByVal strCustPassword As String, ByVal strAddress As String, ByVal strCurAddrCity As String, ByVal strCurAddrState As String, ByVal strCurAddrZip As String, ByVal strLanguage As String, ByVal userState As Object)
            If (Me.GetEVSWithLangOperationCompleted Is Nothing) Then
                Me.GetEVSWithLangOperationCompleted = AddressOf Me.OnGetEVSWithLangOperationCompleted
            End If
            Me.InvokeAsync("GetEVSWithLang", New Object() {strSocialSecurity, strOwnNameFirst, strOwnNameLast, strTelephone, strDrivingLicenseState, strDrivingLicense, strCustRefnumber, strCustPassword, strAddress, strCurAddrCity, strCurAddrState, strCurAddrZip, strLanguage}, Me.GetEVSWithLangOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEVSWithLangOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEVSWithLangCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEVSWithLangCompleted(Me, New GetEVSWithLangCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://transactions.everification.net/EIPSServices/WrapEVS/GetEVSWithIPEMail", RequestNamespace:="http://transactions.everification.net/EIPSServices/WrapEVS", ResponseNamespace:="http://transactions.everification.net/EIPSServices/WrapEVS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEVSWithIPEMail(ByVal strSocialSecurity As String, ByVal strOwnNameFirst As String, ByVal strOwnNameLast As String, ByVal strTelephone As String, ByVal strDrivingLicenseState As String, ByVal strDrivingLicense As String, ByVal strCustRefnumber As String, ByVal strCustPassword As String, ByVal strAddress As String, ByVal strCurAddrCity As String, ByVal strCurAddrState As String, ByVal strCurAddrZip As String, ByVal strEmail As String, ByVal strIPAddress As String) As String
            Dim results() As Object = Me.Invoke("GetEVSWithIPEMail", New Object() {strSocialSecurity, strOwnNameFirst, strOwnNameLast, strTelephone, strDrivingLicenseState, strDrivingLicense, strCustRefnumber, strCustPassword, strAddress, strCurAddrCity, strCurAddrState, strCurAddrZip, strEmail, strIPAddress})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEVSWithIPEMailAsync(ByVal strSocialSecurity As String, ByVal strOwnNameFirst As String, ByVal strOwnNameLast As String, ByVal strTelephone As String, ByVal strDrivingLicenseState As String, ByVal strDrivingLicense As String, ByVal strCustRefnumber As String, ByVal strCustPassword As String, ByVal strAddress As String, ByVal strCurAddrCity As String, ByVal strCurAddrState As String, ByVal strCurAddrZip As String, ByVal strEmail As String, ByVal strIPAddress As String)
            Me.GetEVSWithIPEMailAsync(strSocialSecurity, strOwnNameFirst, strOwnNameLast, strTelephone, strDrivingLicenseState, strDrivingLicense, strCustRefnumber, strCustPassword, strAddress, strCurAddrCity, strCurAddrState, strCurAddrZip, strEmail, strIPAddress, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEVSWithIPEMailAsync(ByVal strSocialSecurity As String, ByVal strOwnNameFirst As String, ByVal strOwnNameLast As String, ByVal strTelephone As String, ByVal strDrivingLicenseState As String, ByVal strDrivingLicense As String, ByVal strCustRefnumber As String, ByVal strCustPassword As String, ByVal strAddress As String, ByVal strCurAddrCity As String, ByVal strCurAddrState As String, ByVal strCurAddrZip As String, ByVal strEmail As String, ByVal strIPAddress As String, ByVal userState As Object)
            If (Me.GetEVSWithIPEMailOperationCompleted Is Nothing) Then
                Me.GetEVSWithIPEMailOperationCompleted = AddressOf Me.OnGetEVSWithIPEMailOperationCompleted
            End If
            Me.InvokeAsync("GetEVSWithIPEMail", New Object() {strSocialSecurity, strOwnNameFirst, strOwnNameLast, strTelephone, strDrivingLicenseState, strDrivingLicense, strCustRefnumber, strCustPassword, strAddress, strCurAddrCity, strCurAddrState, strCurAddrZip, strEmail, strIPAddress}, Me.GetEVSWithIPEMailOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEVSWithIPEMailOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEVSWithIPEMailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEVSWithIPEMailCompleted(Me, New GetEVSWithIPEMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://transactions.everification.net/EIPSServices/WrapEVS/GetAuthAnswers", RequestNamespace:="http://transactions.everification.net/EIPSServices/WrapEVS", ResponseNamespace:="http://transactions.everification.net/EIPSServices/WrapEVS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAuthAnswers( _
                    ByVal sessioncookie As String,  _
                    ByVal CustRefNumber As String,  _
                    ByVal CustPass As String,  _
                    ByVal Answer1 As String,  _
                    ByVal Answer2 As String,  _
                    ByVal Answer3 As String,  _
                    ByVal Answer4 As String,  _
                    ByVal Answer5 As String,  _
                    ByVal Answer6 As String,  _
                    ByVal Answer7 As String,  _
                    ByVal Answer8 As String,  _
                    ByVal Answer9 As String,  _
                    ByVal Answer10 As String,  _
                    ByVal Answer11 As String,  _
                    ByVal Answer12 As String,  _
                    ByVal Answer13 As String,  _
                    ByVal Answer14 As String,  _
                    ByVal Answer15 As String,  _
                    ByVal Answer16 As String,  _
                    ByVal Answer17 As String,  _
                    ByVal Answer18 As String,  _
                    ByVal Answer19 As String,  _
                    ByVal Answer20 As String) As Object
            Dim results() As Object = Me.Invoke("GetAuthAnswers", New Object() {sessioncookie, CustRefNumber, CustPass, Answer1, Answer2, Answer3, Answer4, Answer5, Answer6, Answer7, Answer8, Answer9, Answer10, Answer11, Answer12, Answer13, Answer14, Answer15, Answer16, Answer17, Answer18, Answer19, Answer20})
            Return CType(results(0),Object)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAuthAnswersAsync( _
                    ByVal sessioncookie As String,  _
                    ByVal CustRefNumber As String,  _
                    ByVal CustPass As String,  _
                    ByVal Answer1 As String,  _
                    ByVal Answer2 As String,  _
                    ByVal Answer3 As String,  _
                    ByVal Answer4 As String,  _
                    ByVal Answer5 As String,  _
                    ByVal Answer6 As String,  _
                    ByVal Answer7 As String,  _
                    ByVal Answer8 As String,  _
                    ByVal Answer9 As String,  _
                    ByVal Answer10 As String,  _
                    ByVal Answer11 As String,  _
                    ByVal Answer12 As String,  _
                    ByVal Answer13 As String,  _
                    ByVal Answer14 As String,  _
                    ByVal Answer15 As String,  _
                    ByVal Answer16 As String,  _
                    ByVal Answer17 As String,  _
                    ByVal Answer18 As String,  _
                    ByVal Answer19 As String,  _
                    ByVal Answer20 As String)
            Me.GetAuthAnswersAsync(sessioncookie, CustRefNumber, CustPass, Answer1, Answer2, Answer3, Answer4, Answer5, Answer6, Answer7, Answer8, Answer9, Answer10, Answer11, Answer12, Answer13, Answer14, Answer15, Answer16, Answer17, Answer18, Answer19, Answer20, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAuthAnswersAsync( _
                    ByVal sessioncookie As String,  _
                    ByVal CustRefNumber As String,  _
                    ByVal CustPass As String,  _
                    ByVal Answer1 As String,  _
                    ByVal Answer2 As String,  _
                    ByVal Answer3 As String,  _
                    ByVal Answer4 As String,  _
                    ByVal Answer5 As String,  _
                    ByVal Answer6 As String,  _
                    ByVal Answer7 As String,  _
                    ByVal Answer8 As String,  _
                    ByVal Answer9 As String,  _
                    ByVal Answer10 As String,  _
                    ByVal Answer11 As String,  _
                    ByVal Answer12 As String,  _
                    ByVal Answer13 As String,  _
                    ByVal Answer14 As String,  _
                    ByVal Answer15 As String,  _
                    ByVal Answer16 As String,  _
                    ByVal Answer17 As String,  _
                    ByVal Answer18 As String,  _
                    ByVal Answer19 As String,  _
                    ByVal Answer20 As String,  _
                    ByVal userState As Object)
            If (Me.GetAuthAnswersOperationCompleted Is Nothing) Then
                Me.GetAuthAnswersOperationCompleted = AddressOf Me.OnGetAuthAnswersOperationCompleted
            End If
            Me.InvokeAsync("GetAuthAnswers", New Object() {sessioncookie, CustRefNumber, CustPass, Answer1, Answer2, Answer3, Answer4, Answer5, Answer6, Answer7, Answer8, Answer9, Answer10, Answer11, Answer12, Answer13, Answer14, Answer15, Answer16, Answer17, Answer18, Answer19, Answer20}, Me.GetAuthAnswersOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAuthAnswersOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAuthAnswersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAuthAnswersCompleted(Me, New GetAuthAnswersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://transactions.everification.net/EIPSServices/WrapEVS/GetInternational", RequestNamespace:="http://transactions.everification.net/EIPSServices/WrapEVS", ResponseNamespace:="http://transactions.everification.net/EIPSServices/WrapEVS", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetInternational( _
                    ByVal first As String,  _
                    ByVal last As String,  _
                    ByVal suffix As String,  _
                    ByVal address As String,  _
                    ByVal house_no As String,  _
                    ByVal street As String,  _
                    ByVal county As String,  _
                    ByVal county_name As String,  _
                    ByVal state As String,  _
                    ByVal zip As String,  _
                    ByVal country As String,  _
                    ByVal phone As String,  _
                    ByVal ssn As String,  _
                    ByVal id As String,  _
                    ByVal id_type As String,  _
                    ByVal dob As String,  _
                    ByVal gender As String,  _
                    ByVal ClientTrans As String,  _
                    ByVal Password As String) As Object
            Dim results() As Object = Me.Invoke("GetInternational", New Object() {first, last, suffix, address, house_no, street, county, county_name, state, zip, country, phone, ssn, id, id_type, dob, gender, ClientTrans, Password})
            Return CType(results(0),Object)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetInternationalAsync( _
                    ByVal first As String,  _
                    ByVal last As String,  _
                    ByVal suffix As String,  _
                    ByVal address As String,  _
                    ByVal house_no As String,  _
                    ByVal street As String,  _
                    ByVal county As String,  _
                    ByVal county_name As String,  _
                    ByVal state As String,  _
                    ByVal zip As String,  _
                    ByVal country As String,  _
                    ByVal phone As String,  _
                    ByVal ssn As String,  _
                    ByVal id As String,  _
                    ByVal id_type As String,  _
                    ByVal dob As String,  _
                    ByVal gender As String,  _
                    ByVal ClientTrans As String,  _
                    ByVal Password As String)
            Me.GetInternationalAsync(first, last, suffix, address, house_no, street, county, county_name, state, zip, country, phone, ssn, id, id_type, dob, gender, ClientTrans, Password, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetInternationalAsync( _
                    ByVal first As String,  _
                    ByVal last As String,  _
                    ByVal suffix As String,  _
                    ByVal address As String,  _
                    ByVal house_no As String,  _
                    ByVal street As String,  _
                    ByVal county As String,  _
                    ByVal county_name As String,  _
                    ByVal state As String,  _
                    ByVal zip As String,  _
                    ByVal country As String,  _
                    ByVal phone As String,  _
                    ByVal ssn As String,  _
                    ByVal id As String,  _
                    ByVal id_type As String,  _
                    ByVal dob As String,  _
                    ByVal gender As String,  _
                    ByVal ClientTrans As String,  _
                    ByVal Password As String,  _
                    ByVal userState As Object)
            If (Me.GetInternationalOperationCompleted Is Nothing) Then
                Me.GetInternationalOperationCompleted = AddressOf Me.OnGetInternationalOperationCompleted
            End If
            Me.InvokeAsync("GetInternational", New Object() {first, last, suffix, address, house_no, street, county, county_name, state, zip, country, phone, ssn, id, id_type, dob, gender, ClientTrans, Password}, Me.GetInternationalOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetInternationalOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetInternationalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetInternationalCompleted(Me, New GetInternationalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024) _
                        AndAlso (String.Compare(wsUri.Host, "localhost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return True
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetEVSCompletedEventHandler(ByVal sender As Object, ByVal e As GetEVSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEVSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetEVSFullICCompletedEventHandler(ByVal sender As Object, ByVal e As GetEVSFullICCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEVSFullICCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetEVSWithLangCompletedEventHandler(ByVal sender As Object, ByVal e As GetEVSWithLangCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEVSWithLangCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetEVSWithIPEMailCompletedEventHandler(ByVal sender As Object, ByVal e As GetEVSWithIPEMailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEVSWithIPEMailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetAuthAnswersCompletedEventHandler(ByVal sender As Object, ByVal e As GetAuthAnswersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAuthAnswersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetInternationalCompletedEventHandler(ByVal sender As Object, ByVal e As GetInternationalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetInternationalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object)
            End Get
        End Property
    End Class
End Namespace
